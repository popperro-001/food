{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,sDAAsD,UAAU,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,kCAAkC;AAClC;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,0BAA0B;AAC1B,+CAA+C,IAAI,YAAY,cAAc;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC,OAAO,KAAK;AAC1E;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,KAAK;AACL;AACA,2CAA2C;AAC3C,0CAA0C;AAC1C;AACA,uBAAuB;AACvB;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA,6EAA6E;AAC7E;AACA,iDAAiD;AACjD;AACA;AACA;AACA,oDAAoD;AACpD;AACA,aAAa,GAAG;AAChB;AACA,iFAAiF;AACjF;AACA,oDAAoD;AACpD;AACA,sCAAsC;AACtC,mCAAmC;AACnC;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,4CAA4C;AAC5C,iBAAiB;AACjB;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB;AACjB;AACA,uDAAuD;AACvD;AACA;AACA;AACA,qCAAqC;AACrC,6CAA6C;AAC7C,+CAA+C;AAC/C,2BAA2B;AAC3B;AACA,qBAAqB;AACrB;AACA;AACA;AACA,gBAAgB;AAChB,SAAS;AACT;AACA;AACA,wCAAwC;AACxC;AACA;AACA,+CAA+C;AAC/C,qBAAqB;AACrB;AACA,2DAA2D;AAC3D,oDAAoD;AACpD;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA,WAAW;AACX;AACA,8DAA8D;AAC9D;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,6CAA6C;AAC7C,+EAA+E;AAC/E;AACA;AACA,KAAK;AACL;AACA,kDAAkD;AAClD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,qDAAqD;AACrD;AACA,+BAA+B;AAC/B;AACA,oBAAoB,mBAAmB,OAAO;AAC9C;AACA,kDAAkD;AAClD;AACA,sBAAsB;AACtB;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,aAAa;AACb;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,GAAG;AACZ;AACA;AACA,yDAAyD;AACzD,wCAAwC;AACxC,+CAA+C;AAC/C;AACA,6CAA6C;AAC7C;AACA,kCAAkC;AAClC,KAAK;AACL;AACA;AACA,wDAAwD;AACxD,2CAA2C;AAC3C;AACA;AACA;AACA,gEAAgE;AAChE;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2BAA2B;AAC3B;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,kCAAkC;AAClC;AACA,uDAAuD;AACvD;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA,qCAAqC;AACrC;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC,uCAAuC;AACvC;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UClEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,eAAe,mBAAO,CAAC,4CAAgB;AACvC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,iBAAiB,mBAAO,CAAC,gDAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    /* fit calculator */\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) { //default values\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', sex);\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) { //default values\r\n        ratio = +localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', ratio);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) { //check values fromm localStorage and decorate accordingly calculator\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) { //check for empth input\r\n            result.textContent = '____';\r\n            return;\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) { //function for 2 blocks: geneder and activity\r\n        const elements = document.querySelectorAll(`${selector} div`); //get each child element from parent selector\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                elements.forEach(item => {\r\n                    item.classList.remove(activeClass);\r\n                });\r\n\r\n                e.target.classList.add(activeClass);\r\n\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) { //if user enters anything besides the digits\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n    /* Classes for menu */\r\n\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.classes = classes;\r\n            this.rate = 75; //currency exchange rate\r\n            this.exchangeToUAH(); //rewrite price value according exchange rate\r\n        }\r\n\r\n        exchangeToUAH() { //transform price from usd to uah\r\n            this.price = this.price * this.rate;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            if (this.classes.length === 0) { //set default value\r\n                this.e = 'menu__item';\r\n                element.classList.add(this.e);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `            \r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                </div>            \r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    const getResource = async(url) => { //common GET function to be reusable\r\n        const result = await fetch(url);\r\n\r\n        if (!result.ok) { //fetch does not handle 400 or 500 errors, so we need to handle it manually by catching the error\r\n            throw new Error(`Could not fetch ${url}, status: ${result.status}`);\r\n        }\r\n\r\n        return await result.json();\r\n    };\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({ img, altimg, title, descr, price }) => { //({}) - desconstruction of the object\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n    /* Forms */\r\n    const forms = document.querySelectorAll('form');\r\n\r\n    const message = {\r\n        loading: 'icons/spinner.svg',\r\n        success: 'Thank you! we will contact you soon.',\r\n        failure: 'Something went wrong'\r\n    };\r\n\r\n    forms.forEach(item => { //assign function postData to each form on the page\r\n        bindPostData(item);\r\n    });\r\n\r\n    const postData = async(url, data) => { //common function to handle fitch POST requests\r\n        const result = await fetch(url, { //remember this is async code, error could be when result.json(), second when return, we need to use async before the function and await in the body of function\r\n            method: \"POST\",\r\n            headers: { //if we send JSON\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n\r\n        return await result.json(); //proceed data to json and return as promise\r\n    };\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            // form.append(statusMessage);\r\n            form.insertAdjacentElement('afterend', statusMessage); //works better for form that is in order section, not in modal\r\n\r\n            /* Using XMLHttpRequest */\r\n            // const request = new XMLHttpRequest();\r\n            // request.open('POST', 'server.php');\r\n            // request.setRequestHeader('Content-type', 'multipart/form-data'); //multipart/form-data is used for FormData type, but no need to set request header for formData, it is set automatically\r\n\r\n            // request.setRequestHeader('Content-type', 'application/json'); //if we want to send data as JSON object\r\n\r\n            const formData = new FormData(form); //imprtant - input divs has to contain unique name attribute in order FormData correctly form object (key, value)\r\n\r\n            /* const object = {};\r\n\r\n            formData.forEach(function(value, key) { //convert FormData object to plain object\r\n                object[key] = value;\r\n            }); */\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries())); //makes [[key], [value]] from FormData - entries, then converts it to object - fromEntries(), then to JSON object - JSON.stringify()\r\n\r\n            // const json = JSON.stringify(object); //convert plain object to JSON\r\n\r\n            // request.send(formData);//if we want to send FromData object\r\n            // request.send(json); //if we want to send JSON object\r\n\r\n            /* Using fetch api */\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => { //proceed result wit fetch\r\n                    console.log(data);\r\n                    showThanksModal(message.success);\r\n                    statusMessage.remove(); //remove spinner                    \r\n                }).catch(() => {\r\n                    showThanksModal(message.failure);\r\n                }).finally(() => {\r\n                    form.reset(); //clear form\r\n                });\r\n\r\n            // request.addEventListener('load', () => {//proceed response with XMLHttpRequest\r\n            //     if (request.status === 200) {\r\n            //         console.log(request.response);\r\n            //         showThanksModal(message.success);\r\n            //         form.reset(); //clear form\r\n            //         // setTimeout(() => { //remove message after 2 sec\r\n            //         statusMessage.remove(); //remove spinner\r\n            //         // }, 2000);\r\n\r\n            //     } else {\r\n            //         // statusMessage.textContent = message.failure;\r\n            //         showThanksModal(message.failure);\r\n            //     }\r\n            // });\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) { //create info modal after form was submitted\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide'); //hide form from modal\r\n        openModal(); //open modal with form hidden\r\n\r\n        const thanksModal = document.createElement('div'); //create new block\r\n        thanksModal.classList.add('modal__dialog'); //add styles\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `; //fill new block with necessary content\r\n\r\n        document.querySelector('.modal').append(thanksModal); //add new block to maodal\r\n\r\n        setTimeout(() => { //bring back default settings for modal\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n    /* Modal */\r\n\r\n    const modal = document.querySelector('.modal'),\r\n        btnOpenModal = document.querySelectorAll('[data-modal]');\r\n    // btnCloseModal = document.querySelector('[data-close]'); this approach would not work with the dynamic created content\r\n\r\n    function openModal() {\r\n        modal.classList.remove('hide');\r\n        modal.classList.add('show');\r\n        document.body.style.overflow = 'hidden'; //disable scroll function of the window when modal is opened\r\n        clearInterval(modalTimerId);\r\n    }\r\n    btnOpenModal.forEach(item => {\r\n        item.addEventListener('click', openModal);\r\n    });\r\n\r\n    function closeModal() {\r\n        modal.classList.remove('show');\r\n        modal.classList.add('hide');\r\n        document.body.style.overflow = '';\r\n    }\r\n\r\n    // btnCloseModal.addEventListener('click', closeModal); this approach would not work with the dynamic created content\r\n\r\n    modal.addEventListener('click', (e) => { //if user clicks anywhere besides the opened modal, modal should close\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') { //addid getAttribute to close modal\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => { //if user press esc button on keyboard, modal should close\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    const modalTimerId = setTimeout(openModal, 50000);\r\n\r\n    function showModalByScroll() { //if user scrolled down till the end of the page modal will pop-up automatically\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal();\r\n            window.removeEventListener('scroll', showModalByScroll); //thus modal will be showed by scroll only once\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n    /* Slider */\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        next = document.querySelector('.offer__slider-next'),\r\n        currentSlide = document.querySelector('#current'),\r\n        totalSlides = document.querySelector('#total'),\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        slidesField = document.querySelector('.offer__slider-inner'),\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n    let slideIndex = 1; //default position of our slider\r\n    let offset = 0;\r\n\r\n    totalSlides.textContent = getZero(slides.length);\r\n\r\n    currentSlide.textContent = getZero(slideIndex);\r\n\r\n    /* Slider navigation */\r\n    const slider = document.querySelector('.offer__slider');\r\n\r\n    slider.style.position = 'relative'; //put parent element positon relative thus we can position absolute inner element\r\n\r\n    const indicators = document.createElement('ol'), //create ordered list\r\n        dots = [];\r\n    indicators.classList.add('carousel-indicators'); //add stiles to ol\r\n\r\n    slider.append(indicators); //put ol into slider\r\n\r\n    for (let i = 0; i < slides.length; i++) { //create list item for each slide\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1); //set data attribute to each list item so we can reffer to it in the future\r\n        dot.classList.add('dot');\r\n        if (i == 0) { //highlight default element\r\n            dot.style.opacity = 1;\r\n        }\r\n\r\n        indicators.append(dot); //put dot element into ol   \r\n        dots.push(dot);\r\n    }\r\n\r\n    /*     totalSlides.textContent = getZero(slides.length);\r\n\r\n\r\n        showSlides(slideIndex); //we need to run function at the beginning to set default behavior\r\n\r\n        function showSlides(n) {\r\n            if (n > slides.length) { //if we reached the end of slider we return to the beginning\r\n                slideIndex = 1;\r\n            }\r\n\r\n            if (n < 1) { //if we want to go beyond the beginning we return to the end of the slider\r\n                slideIndex = slides.length;\r\n            }\r\n\r\n            slides.forEach(item => { //hide all slides\r\n                item.classList.remove('show');\r\n                item.classList.add('hide');\r\n            });\r\n\r\n            slides[slideIndex - 1].classList.remove('hide'); //show slide by index\r\n            slides[slideIndex - 1].classList.add('show');\r\n\r\n            currentSlide.textContent = getZero(slideIndex);\r\n        }\r\n\r\n        function plusSlides(n) {\r\n            showSlides(slideIndex += n);\r\n        }\r\n\r\n        prev.addEventListener('click', () => {\r\n            plusSlides(-1);\r\n        });\r\n\r\n        next.addEventListener('click', () => {\r\n            plusSlides(1);\r\n        }); */\r\n\r\n    /* Slider advanced */\r\n    slidesField.style.width = 100 * slides.length + '%'; //all slides are placed inside the sliderWrapper\r\n    slidesField.style.display = 'flex'; //get all slides stand in line\r\n    slidesField.style.transition = '0.5s all'; //set smooth transition\r\n\r\n    slidesWrapper.style.overflow = 'hidden'; //hide all slides that are off the visibility area\r\n    slides.forEach(item => {\r\n        item.style.width = width; //set all slides equal width, so we can be sure they are all fit in slidesField\r\n    });\r\n\r\n    function activeDot(index) {\r\n        dots.forEach(dot => dot.style.opacity = '0.5'); //put all dots to inactive state\r\n        dots[index - 1].style.opacity = 1; //highlight active element\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == +parseInt(width) * (slides.length - 1)) { //if we reached the end of slider we return to the beginning, aslo we need to parseInt because width = string(ex '500px')\r\n            offset = 0;\r\n        } else {\r\n            offset += +parseInt(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        currentSlide.textContent = getZero(slideIndex);\r\n\r\n        activeDot(slideIndex);\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) { //if we want to go beyond the beginning we return to the end of the slider\r\n            offset = +parseInt(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= +parseInt(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        currentSlide.textContent = getZero(slideIndex);\r\n\r\n        activeDot(slideIndex);\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => { //get event object\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo; //set slide index using attribute value\r\n\r\n            offset = +parseInt(width) * (slideTo - 1); //set offset using attribute value\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            currentSlide.textContent = getZero(slideIndex);\r\n\r\n            activeDot(slideIndex);\r\n        });\r\n    });\r\n\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    /* Tab Content */\r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n        tabsContent = document.querySelectorAll('.tabcontent'),\r\n        tabsParent = document.querySelector('.tabheader__items');\r\n\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) { //set default value if we call function without arg\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabContent(); //on load screen we need default settings\r\n    showTabContent(); //on load screen we need default settings, default arg value = 0\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target; //if we will use event.target multiple times it is better to set variable\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) { //compare terget tab with tabs NodeList, to get the index = i, in order to put this index for tabContent\r\n                    hideTabContent(); //first hide all tabs\r\n                    showTabContent(i); //second display tab by index\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    /* Timer */\r\n\r\n    const deadline = '2022-05-06';\r\n\r\n    function getTimeRemaining(endtime) { //get difference between current date and arg date\r\n        let days, hours, minutes, seconds;\r\n        const t = Date.parse(endtime) - Date.parse(new Date());\r\n        if (t <= 0) { //check for past date\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n            hours = Math.floor((t / (1000 * 60 * 60) % 24));\r\n            minutes = Math.floor((t / 1000 / 60) % 60);\r\n            seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n\r\n\r\n        return {\r\n            'total': t,\r\n            days,\r\n            hours,\r\n            minutes,\r\n            seconds\r\n        };\r\n    }\r\n\r\n    function getZero(num) { //function to add 0 if digit is less than 10\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock(); //in order not to wait 1 second when we refresh website and default(in HTML) values change to actual ones\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock('.timer', deadline);\r\n    // console.log(new Date(Date.parse(deadline)));\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const tabs = require('./modules/tabs'),\r\n        modal = require('./modules/modal'),\r\n        timer = require('./modules/timer'),\r\n        calc = require('./modules/calc'),\r\n        cards = require('./modules/cards'),\r\n        forms = require('./modules/forms'),\r\n        slider = require('./modules/slider');\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    calc();\r\n    cards();\r\n    forms();\r\n    slider();\r\n\r\n});"],"names":[],"sourceRoot":""}